var lexer = require("lexer.mnd");
var parser = require("parser.mnd");
var interpreter = require("interpreter.mnd");

fun assert(value, correct) {
    return value == correct;
}

var id = 0;

fun runTest(program, variable, correct) {
    var l = lexer.new(program);
    var p = parser.new(l.scan());

    var expressions = [];

    for(var line = 0; line < l.input.split("\n").length(); line++) {
        if(id == 13)
            debugger;
        var lineExpression = p.parseLineExpression();
        var lineNumber = lineExpression[0];
        var expression = lineExpression[1];

        expressions.add({line: lineNumber, expression: expression});

        if(p.match("newline"))
            p.tokenStream.consume();
    }

    var i = interpreter.new(expressions, null, true);

    i.interpret();
    var status = assert(i.variables[variable], correct);

    return status;
}

fun test(program, variable, correct) {
    var result = try(runTest, program, variable, correct);
    var status = result.result;
    var errorMessage = "";

    if(result.error) {
        status = false;
        errorMessage = result.error;
    }

    var message = status ? "passed" : "failed";
    printLn("Test #{0}:\t{1}\t{2}".format(id, message, errorMessage));
    id++;
}


printLn("BASIC-Mond tests",
        "================\n");

test("10 PRINT 'HELLO WORLD'", "A", undefined);
test("10 A = 1", "A", 1);
test("19 KILLOWATT = 69", "KILLOWATT", 69);
test("10 A = 79
20 B = 10
30 C = A - B", "C", 69);
test("10 A = 79: B = 10: C = A - B", "C", 69);
test("10 PRINT FART( RND(69) )", "A", undefined);
test("10 A = INT(69/3)", "A", 23);
test("10 A = 69
20 PRINT 'I love to';A", "A", 69);
test("10 GOTO 69", "A", undefined);
test("10 GOSUB 30
20 PRINT 'should see this once'
30 PRINT 'YAY!'
40 RETURN", "A", undefined);
test("10 GOSUB 69
20 END
69 A = 69", "A", 69);
test("10 A = 1 - 2 - 3", "A", -4);
test("0 IF 69 = NUM('69') THEN 30
10 END
20 END
30 A = 69", "A", 69);
test("10 REM *** THIS IS A TEST OF COMMENTS
11 C = 69
20 REM PRINT THE VALUE OF C IF IT IS EQUAL TO 69
30 IF C = 69 PRINT 'YES!'", "C", 69);

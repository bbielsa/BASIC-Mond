var OPERATORS = {
    GREATERTHAN: 0,
    LESSTHAN: 1,
    GREATERTHANEQUAL: 2,
    LESSTHANEQUAL: 3,
    NOTEQUAL: 5,
    EQUAL: 6
};

fun evaluate(this, interpreter) {

    var left = this.left.evaluate(interpreter) + "";
    var right = this.right.evaluate(interpreter) + "";

    left = Json.deserialize(left);
    right = Json.deserialize(right);
    


    if(this.comparison == OPERATORS.GREATERTHAN) {
        return left > right;
    }
    else if(this.comparison == OPERATORS.LESSTHAN) {
        return left < right;
    }
    else if(this.comparison == OPERATORS.GREATERTHANEQUAL) {
        return left >= right;
    }
    else if(this.comparison == OPERATORS.LESSTHANEQUAL) {
        return left <= right;
    }
    else if(this.comparison == OPERATORS.EQUAL) {

        return left == right;
    }
    else if(this.comparison == OPERATORS.NOTEQUAL) {
        return left != right;
    }
}

fun new(comparison, left, right) {
    return {
        comparison: comparison,
        left: left,
        right: right,

        evaluate: evaluate,
        type:"boolean"
    }.enableThis();
}

return {new};

/*
    TODO:
        -Ignore lines with comments
        -Parenthetical mathematical expressions

*/

var lexer = require("lexer.mnd");
var parser = require("parser.mnd");
var interpreter = require("interpreter.mnd");

//var f = File.readAllText("hamurabi.bas").trim();
//var l = lexer.new(f);

var l = lexer.new("0 PRINT 'GUESS THE PASSWORD'
10 A = 'FART'
20 INPUT B
30 IF A <> B THEN 10
40 PRINT 'YOU GUESSED THE PASSWORD'");

//var l = lexer.new("10 INPUT A");

var tokens = l.scan();
/*
foreach(var t in tokens)
    printLn("{0}: {1}".format(t.type, t.lexeme));
*/

seq inputStream() {
    while(true)
        yield "100";
}

//foreach(var t in tokens)
//    printLn("[{0}]: {1}".format(t.type, t.lexeme));

var p = parser.new(tokens);

//printLn(p.tokenStream.lookAhead(0).type, p.getPrecedence());
var expressions = [];

for(var line = 0; line < l.input.split("\n").length(); line++) {
    var lineExpression = p.parseLineExpression();
    var lineNumber = lineExpression[0];
    var expression = lineExpression[1];

    expressions.add({line: lineNumber, expression: expression});

    if(p.match("newline"))
        p.tokenStream.consume(); // consume new line
}

var i = interpreter.new(expressions);
/*
var CURRENTFILE = "";
i.functions.FOPEN = fun(uri) {
    CURRENTFILE = uri;
};
i.functions.FREAD = fun() -> File.readAllText(CURRENTFILE);
i.functions.FWRITE = fun(contents) {
    File.writeAllText(CURRENTFILE, contents + "");
};
*/
i.interpret();
printLn(i.variables["A"]);
